<?xml version="1.0" encoding="windows-1251"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "../hrc.dtd">
<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc">
    <type name="ds" access="public">

        <region name="text" parent="def:Text" />
        <region name="service" parent="def:default" />
        <region name="sym" parent="def:Symbol"/>
        <region name="keyword" parent="def:Keyword"/>
        <region name="error" parent="def:Error"/>
        <region name="outlined" parent="def:Outlined"/>

        <scheme name="ds">
            <block start="/^\s*((@group))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="group"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@article))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="article"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@class))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="class"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <regexp match="/^(\s+)$/" region1="text" />
            <regexp priority="low" match="/^(.+)$/" region1="error" />
        </scheme>

        <scheme name="group" >
            <regexp match="/^\s*((@key)(=)\s*(.*))$/"
                    region1="outlined" region2="keyword" region3="sym" region4="service" />
            <regexp match="/^\s*(@ingroup)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@sortarticles)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@sortgroups)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@sortclasses)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@importhhc)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@importhhk)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@order)(=)\s*((sorted|custom)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@transform)(=)\s*((yes|no|def)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <block start="/^\s*(@title)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <block start="/^\s*(@brief)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <block start="/^\s*((@see))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="seealso"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <inherit scheme="text" />
        </scheme>

        <scheme name="article">
            <regexp match="/^\s*((@key)(=)\s*(.*))$/"
                    region1="outlined" region2="keyword" region3="sym" region4="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@ingroup)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@aliasId)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@excludeFromList)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <regexp match="/^\s*(@transform)(=)\s*((yes|no|def)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <block start="/^\s*(@title)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <block start="/^\s*(@brief)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <block start="/^\s*((@see))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="seealso"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <inherit scheme="text" />
        </scheme>

        <scheme name="class" >
            <regexp match="/^\s*(@key)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@declname)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*((@name)(=)\s*(.*))$/"
                    region1="outlined" region2="keyword" region3="sym" region4="service" />

            <regexp match="/^\s*(@sig)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@prefix)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@type)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service"  />

            <regexp match="/^\s*(@sort)(=)\s*(yes|no)$/"
                    region1="keyword" region2="sym" region3="keyword"  />

            <regexp match="/^\s*(@classnameinkey)(=)\s*(true|false|both)$/"
                    region1="keyword" region2="sym" region3="keyword"  />

            <regexp match="/^\s*(@ingroup)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@import)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@transform)(=)\s*((yes|no|def)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />


            <block start="/^\s*(@parent)(=)/" end="/$/"
                   scheme="text"
                   region01="keyword"
                   region02="sym"
                    />



            <block start="/^\s*((@see))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="seealso"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@declaration))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="declaration"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@param))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="param"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@member))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="member"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*(@brief)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />
            <inherit scheme="text" />

        </scheme>

        <scheme name="member" >
            <regexp match="/^\s*((@name)(=)\s*(.*))$/"
                    region1="outlined" region2="keyword" region3="sym" region4="service" />

            <regexp match="/^\s*(@key)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@divisor)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@custom)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@sig)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@type)(=)\s*((property|field|method|constructor|function)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <regexp match="/^\s*(@visibility)(=)\s*((public|protected|private|package)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <regexp match="/^\s*(@scope)(=)\s*((class|instance)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <regexp match="/^\s*(@excludeFromList)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />

            <regexp match="/^\s*(@index)(=)\s*(.*)\s*$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@transform)(=)\s*((yes|no|def)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />


            <block start="/^\s*((@see))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="seealso"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@declaration))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="declaration"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@param))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="param"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@return))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="return"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@exception))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="exception"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*(@brief)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />
            <inherit scheme="text" />
        </scheme>

        <scheme name="return" >
            <inherit scheme="text" />
        </scheme>

        <scheme name="exception" >
            <regexp match="/^\s*(@name)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <inherit scheme="text" />
        </scheme>


        <scheme name="declaration">
            <regexp match="/^\s*(@language)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@prefix)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@name)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@suffix)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@namesuffix)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <block start="/^\s*(@return)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <block start="/^\s*(@params)(=)/" end="/$/"
                   scheme="text-only"
                   region01="keyword"
                   region02="sym"
                    />

            <regexp match="/^\s*(@custom)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^(\s+)$/" region1="text" />
            <regexp priority="low" match="/^(.*)$/" region1="error" />
        </scheme>

        <scheme name="seealso" >
            <regexp match="/^\s*(@key)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@title)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <inherit scheme="text" />
        </scheme>

        <scheme name="param" >
            <regexp match="/^\s*(@name)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@gray)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <inherit scheme="text" />
        </scheme>

        <scheme name="table" >
            <regexp match="/^\s*(@width)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <block start="/^\s*((@row))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="tablerow"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <regexp match="/^(\s+)$/" region1="text" />
            <regexp priority="low" match="/^(.*)$/" region1="error" />
        </scheme>

        <scheme name="tablerow" >
            <regexp match="/^\s*(@header)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                                region1="keyword" region2="sym" region3="service" />

            <block start="/^\s*((@col))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="tablecol"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <regexp match="/^(\s+)$/" region1="text" />
            <regexp priority="low" match="/^(.*)$/" region1="error" />
        </scheme>

        <scheme name="tablecol" >
            <regexp match="/^\s*(@width)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <regexp match="/^\s*(@gray)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />

            <inherit scheme="text" />
        </scheme>

        <scheme name="list" >
            <regexp match="/^\s*(@type)(=)\s*(num|dot)$/"
                    region1="keyword" region2="sym" region3="service" />

            <block start="/^\s*((@list-item))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="listitem"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@list))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="list"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <regexp match="/^(\s+)$/" region1="text" />
            <regexp priority="low" match="/^(.*)$/" region1="error" />
        </scheme>

        <scheme name="tab" >
            <regexp match="/^\s*(@title)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <inherit scheme="text-only" />
        </scheme>

        <scheme name="example" >
            <regexp match="/^\s*(@title)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@if)(=)\s*(.*)$/"
                    region1="keyword" region2="sym" region3="service" />
            <regexp match="/^\s*(@transform)(=)\s*((yes|no|def)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@show)(=)\s*((yes|no|always)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@gray)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <regexp match="/^\s*(@tabs)(=)\s*((yes|no)|(.*))\s*$/"
                    region1="keyword" region2="sym" region4="keyword" region5="error" />
            <block start="/^\s*((@tab))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="tab"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <inherit scheme="text-only" />
        </scheme>

        <scheme name="listitem" >
            <inherit scheme="text" />
        </scheme>

        <scheme name="header" >
            <regexp match="/^\s*(@level)(=)\s*([1-6])\s*$/"
                    region1="keyword" region2="sym" region3="service" />

            <inherit scheme="text-only" />
        </scheme>

        <scheme name="text" >

            <block start="/^\s*((@table))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="table"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@list))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="list"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@headline))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="header"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/^\s*((@example))\s*$/" end="/^\s*((@end))\s*$/"
                   scheme="example"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <inherit scheme="text-only" />
        </scheme>

        <scheme name="text-only" >
            <block start="/((\[b\]))/" end="/((\[\/b\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[c\]))/" end="/((\[\/c\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[i\]))/" end="/((\[\/i\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[u\]))/" end="/((\[\/u\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[s\]))/" end="/((\[\/s\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[sup\]))/" end="/((\[\/sup\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[sub\]))/" end="/((\[\/sub\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[red\]))/" end="/((\[\/red\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[green\]))/" end="/((\[\/green\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[blue\]))/" end="/((\[\/blue\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[gray\]))/" end="/((\[\/gray\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region11="keyword" />

            <block start="/((\[size=([\+\-]?\d+)\]))/" end="/((\[\/size\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />

            <block start="/((\[color=(\#?[0-9A-Fa-f]{6})\]))/" end="/((\[\/color\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />

            <block start="/((\[link=([^\]]+)\]))/" end="/((\[\/link\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />

            <block start="/((\[clink=([^\]]+)\]))/" end="/((\[\/clink\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />


            <block start="/((\[url=([^\]]+)\]))/" end="/((\[\/url\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />

            <block start="/((\[eurl=([^\]]+)\]))/" end="/((\[\/eurl\]))/"
                   scheme="text-only"
                   region02="def:PairStart"
                   region12="def:PairEnd"
                   region01="keyword"
                   region03="sym"
                   region11="keyword" />


            <regexp match="/(\[br\])/" region1="keyword"/>
            <regexp match="/(\[nil\])/" region1="keyword"/>
            <regexp match="/(\[img=([^\]]+)\])/" region1="keyword" region2="sym" />

            <regexp priority="low" match="/^\s*@(\w+)/" region1="error"/>
        </scheme>
    </type>
</hrc>


